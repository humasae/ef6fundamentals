// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublisherData;

#nullable disable

namespace PublisherData.migrations
{
    [DbContext(typeof(PubContext))]
    [Migration("20230105181958_seedauthors")]
    partial class seedauthors
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PublisherDomain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Rodrigo",
                            LastName = "Cortés"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Brandon",
                            LastName = "Sanderson"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Javier",
                            LastName = "Negrete"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Joe",
                            LastName = "Abercrombie"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Stephen",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Arturo",
                            LastName = "Pérez Reverte"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "BB",
                            LastName = "King"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "JRR",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Christopher",
                            LastName = "Tolkien"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Dean",
                            LastName = "Koontz"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Juan",
                            LastName = "Gómez Jurado"
                        });
                });

            modelBuilder.Entity("PublisherDomain.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("PublisherDomain.Book", b =>
                {
                    b.HasOne("PublisherDomain.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("PublisherDomain.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
